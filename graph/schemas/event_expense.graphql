type EventExpense {
  expenseId: Int!
  eventId: Event!
  itemName: String!
  cost: Float!
  description: String
  categoryId: Int!
}

type EventExpenseCategory {
  categoryId: Int!
  categoryName: String!
}

type CategoryTotal {
  categoryName: String!
  totalCost: Float!
}

input NewEventExpense {
  eventId: Int!
  itemName: String!
  cost: Float!
  description: String
  categoryId: Int!
}

extend type Query {
  getEventExpensesByCategory(eventId: Int!): [CategoryTotal!]!
    @requireOrganizerRole(role: [Admin, Contributor])
    @authenticate
}

extend type Mutation {
  createEventExpense(eventId: Int!, input: NewEventExpense!): Boolean!
    @requireOrganizerRole(role: [Admin])
    @authenticate
}
